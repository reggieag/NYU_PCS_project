openapi: 3.0.0
info:
  title: Toy API
  description: Toy API for testing RESTler
  version: 0.1.0

components:
  schemas:
    DataOutput:
      properties:
        dataId:
          type: integer
        name:
          type: string
        quantity:
          type: integer
      required:
        - dataId
        - name
        - quantity

paths:
  /data:
    get:
      summary: Returns a list of data.
      description: Basically should return entire DB
      responses:
        '200':
          description: JSON array of data types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schema/DataOutput'
    post:
      summary: Add a new entry
      description: Add a new row to the db
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: integer
              required:
                - name
                - quantity
      responses:
        '200':
          description: Return data
          content:
            application/json:
              schema:
                $ref: '#components/schema/DataOutput'
  /data/{dataId}:
    get:
      summary: Get data by id
      parameters:
        - name: dataId
          in: path
          required: true
          description: ID of data
          schema:
            type: integer
      responses:
        '200':
          description: Data of data
          content:
            application/json:
              schema:
                $ref: '#components/schema/DataOutput'
        '400':
          description: Input was not a valid id
        '404':
          description: Data with specified id not found
    post:
      summary: Update data by id
      parameters:
        - name: dataId
          in: path
          required: true
          description: ID of data
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: integer
      responses:
        '200':
          description: Data updated
          content:
            application/json:
              schema:
                $ref: '#components/schema/DataOutput'
        '400':
          description: Input was not a valid id
        '404':
          description: Data with specified id not found
    delete:
      summary: Delete data by id
      parameters:
        - name: dataId
          in: path
          required: true
          description: ID of data
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted data
        '400':
          description: Input was not a valid id
        '404':
          description: Data with specified id not found
  /ping:
    get:
      summary: Healthcheck response
      description: If service is up and running, this will never fail
      responses:
        '200':
          description: Struct with some status info
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean


