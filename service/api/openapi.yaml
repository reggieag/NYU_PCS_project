openapi: 3.0.0
info:
  description: Toy API for testing RESTler
  title: Toy API
  version: 0.1.0
servers:
- url: /
paths:

  /data:
    get:
      description: Basically should return entire DB
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataOutput'
                type: array
          description: JSON array of data types
      summary: Returns a list of data.
      security:
        - standard: [read, all]

    post:
      description: Add a new row to the db
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOutput'
          description: Return data
      summary: Add a new entry
      security:
        - standard: [write]

  /data/{dataId}:
    delete:
      parameters:
      - description: ID of data
        explode: false
        in: path
        name: dataId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Successfully deleted data
        "400":
          description: Input was not a valid id
        "404":
          description: Data with specified id not found
      summary: Delete data by id
      security:
        - standard: [write]

    get:
      parameters:
      - description: ID of data
        explode: false
        in: path
        name: dataId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOutput'
          description: Data of data
        "400":
          description: Input was not a valid id
        "404":
          description: Data with specified id not found
      summary: Get data by id
      security:
        - standard: [write]

    post:
      parameters:
      - description: ID of data
        explode: false
        in: path
        name: dataId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOutput'
          description: Data updated
        "400":
          description: Input was not a valid id
        "404":
          description: Data with specified id not found
      summary: Update data by id
      security:
        - standard: [write]

  /ping:
    get:
      description: If service is up and running, this will never fail
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingOutput'
          description: Return data for ping
      summary: Healthcheck response

components:

  securitySchemes:
    standard:
      type: oauth2
      description: Use OAuth2 with client credentials flow
      flows:
        clientCredentials:
          tokenUrl: http://127.0.0.1:9096/token
          scopes:
            read: read data on a per id basis 
            write: modify data on a per id basis
            all: permission client for database wide operations

  schemas:
    DataOutput:
      properties:
        dataId:
          type: integer
        name:
          type: string
        quantity:
          type: integer
      required:
      - dataId
      - name
      - quantity
    CreateInput:
      properties:
        name:
          type: string
        quantity:
          type: integer
      required:
      - name
      - quantity
      type: object
    UpdateInput:
      properties:
        name:
          type: string
        quantity:
          type: integer
      type: object
    PingOutput:
      properties:
        ok:
          type: boolean
